name: CI

on:
  # Run on every pull request
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  JAVA_VERSION: 17
  MAVEN_SETTINGS: .github/settings.xml

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Will build the binaries, run tests and checks on them and if everything succeeds AND it is a push
# to the main branch will build and deploy a snapshot release of the binaries

jobs:
  # Simply compile the maven project and upload the build
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Update Maven Settings
        run: mkdir -p ~/.m2 ; cp ${{ env.MAVEN_SETTINGS }} ~/.m2

      # No Snapshot Updates, Batch Mode, Show errors and skip tests
      - name: Build Project
        run: mvn clean install -nsu -B -e -skipTests

      # Upload the built artifacts
      - name: Store Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: innovationhub-artifacts.zip
          retention-days: 2
          path: |
            ~/.m2/repository/de/innovationhub
            !~/.m2/repository/de/innovationhub/**/*.tar.gz

      - name: Remove artifacts before caching
        if: steps.cache.outputs.cache-hit != 'true'
        run: rm -rf ~/.m2/repository/de/innovationhub

  # run tests on pre-built files
  unit-test:
    name: Unit Tests

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Update Maven Settings
        run: mkdir -p ~/.m2 ; cp ${{ env.MAVEN_SETTINGS }} ~/.m2

      - name: Cleanup artifacts
        run: rm -rf ~/.m2/repository/de/innovationhub >/dev/null || true

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/de/innovationhub
          name: innovationhub-artifacts.zip

      - name: Run unit tests
        run: |
          if ! mvn test -nsu -B; then
            find . -path '*/target/surefire-reports/*.xml' | zip -q reports-unit-tests.zip -@
            exit 1
          fi

      - name: Unit test reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: reports-unit-tests
          retention-days: 14
          path: reports-unit-tests.zip
          if-no-files-found: ignore

  integration-test:
    name: Integration Tests

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Update Maven Settings
        run: mkdir -p ~/.m2 ; cp ${{ env.MAVEN_SETTINGS }} ~/.m2

      - name: Cleanup artifacts
        run: rm -rf ~/.m2/repository/de/innovationhub >/dev/null || true

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/de/innovationhub
          name: innovationhub-artifacts.zip

      - name: Run integration tests
        run: |
          if ! mvn verify -Dskip.unit.tests -nsu -B; then
            find . -path '*/target/failsafe-reports/*.xml' | zip -q reports-integration-tests.zip -@
            exit 1
          fi

      - name: Unit test reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: reports-unit-tests
          retention-days: 14
          path: reports-integration-tests.zip
          if-no-files-found: ignore

  package:
    name: Maven package

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Cleanup artifacts
        run: rm -rf ~/.m2/repository/de/innovationhub >/dev/null || true

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/de/innovationhub
          name: innovationhub-artifacts.zip

      - name: Update Maven Settings
        run: mkdir -p ~/.m2 ; cp ${{ env.MAVEN_SETTINGS }} ~/.m2

      - name: Maven Package
        run: |
          mvn -nsu -B -e -DskipTests package

      # Upload the built artifacts
      - name: Store Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: maven-target.zip
          retention-days: 2
          path: |
            ./target/**

  release:
    name: Release

    needs: [ unit-test, integration-test, package ]

    # Only run if a tag is created
    if: startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Update Maven Settings
        run: mkdir -p ~/.m2 ; cp ${{ env.MAVEN_SETTINGS }} ~/.m2

      - name: Cleanup artifacts
        run: rm -rf ~/.m2/repository/de/innovationhub >/dev/null || true

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          path: ~/.m2/repository/de/innovationhub
          name: innovationhub-artifacts.zip

      - name: Login to Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_USERNAME }}
          password: ${{ secrets.QUAY_IO_PASSWORD }}

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

      - name: Maven Deploy
        run: |
          mvn -nsu -B -e -Prelease -DskipTests -Djib.to.tags=latest,${{ steps.get_version.outputs.version }} deploy

      - name: Publish Helm charts
        uses: stefanprodan/helm-gh-pages@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          charts_dir: ./deploy/charts
          app_version: ${{ steps.get_version.outputs.version }}
          chart_version: ${{ steps.get_version.outputs.version }}
